{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = void 0 && (void 0).__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importDefault(require(\"react\"));\n\nvar amphtml_context_1 = require(\"./amphtml-context\");\n\nfunction isAmp() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$enabled = _ref.enabled,\n      enabled = _ref$enabled === void 0 ? false : _ref$enabled,\n      _ref$hybrid = _ref.hybrid,\n      hybrid = _ref$hybrid === void 0 ? false : _ref$hybrid,\n      _ref$hasQuery = _ref.hasQuery,\n      hasQuery = _ref$hasQuery === void 0 ? false : _ref$hasQuery;\n\n  return enabled && (!hybrid || hybrid && hasQuery);\n}\n\nexports.isAmp = isAmp;\n\nfunction useAmp() {\n  var ampMode = react_1.default.useContext(amphtml_context_1.AmpModeContext); // un-comment below to not be considered AMP in dirty mode\n\n  return isAmp(ampMode); // && ampMode.hasQuery\n}\n\nexports.useAmp = useAmp;\n\nfunction withAmp(Component) {\n  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref2$hybrid = _ref2.hybrid,\n      hybrid = _ref2$hybrid === void 0 ? false : _ref2$hybrid;\n\n  function WithAmpWrapper() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ampMode = react_1.default.useContext(amphtml_context_1.AmpModeContext);\n    ampMode.enabled = true;\n    ampMode.hybrid = hybrid;\n    return react_1.default.createElement(Component, props);\n  }\n\n  WithAmpWrapper.__nextAmpOnly = !hybrid;\n  WithAmpWrapper.getInitialProps = Component.getInitialProps;\n  return WithAmpWrapper;\n}\n\nexports.withAmp = withAmp;","map":null,"metadata":{},"sourceType":"script"}